name: Checkout

inputs:
  fetch-depth:
    default: 1
    required: false
  path:
    default: ''
    required: false
    description: ef
    type: string
  repository:
    default: ${{ github.repository }}
    required: false
    description: a repo
  ref:
    default: ''
    description: abc
    required: false
  token:
    default: ${{ github.token }}
    required: false
    description: def
    type: string
  default-branch:
    required: true
    type: string

runs:
  using: composite
  steps:
    - id: repo
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        if [[ -z "${{ inputs.ref }}" ]]
        then
          if [[ "${{ inputs.repository }}" != "${{ github.repository }}" ]]
          then
            USING="default branch"
          else
            USING="${{ inputs.default-branch }}"
          fi
          echo "::notice::Checkout: ${{ inputs.repository }} using ${USING}"
          echo "ref-exists=true" >> $GITHUB_OUTPUT
        else
          if git ls-remote --heads --quiet --exit-code https://${{ inputs.token }}@github.com/${{ inputs.repository }}.git ${{ inputs.ref }}
          then
            echo "::notice::Checkout: ${{ inputs.repository }} using ${{ inputs.ref }}"
            echo "::set-output name=ref-exists::true"
          else
            USING="${{ inputs.default-branch }}"
            echo "::notice::Checkout: ${{ inputs.repository }} does not have ref ${{ inputs.ref }} (fallback to ${USING})"
            echo "::set-output name=ref-exists::false"
            echo "::set-output name=default-branch::${USING}"
          fi
        fi

    - if: steps.repo.outputs.ref-exists == 'true'
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
        path: ${{ inputs.path }}
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}

    - if: steps.repo.outputs.ref-exists == 'false'
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
        path: ${{ inputs.path }}
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.default-branch }}
        token: ${{ inputs.token }}